/* Copyright 2023 ETH Zurich and University of Bologna. */
/* Solderpad Hardware License, Version 0.51, see LICENSE for details. */
/* SPDX-License-Identifier: SHL-0.51 */

/* Dummy LIB for the RM_IHPSG13_1P_64x64_c2_bm_bist memory */

/* Information extracted from the SRAM data sheet available openly at: */
/* https://github.com/IHP-GmbH/IHP-Open-PDK/tree/main/ihp-sg13g2/libs.ref/sg13g2_sram/doc */

/* other things taken from https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/master/flow/platforms/nangate45/lib/fakeram45_128x256.lib#L38 */

library(RM_IHPSG13_1P_64x64_c2_bm_bist_dummy) {

  slew_derate_from_library : 1.000;
  slew_lower_threshold_pct_fall : 20.000;
  slew_upper_threshold_pct_fall : 80.000;
  slew_lower_threshold_pct_rise : 20.000;
  slew_upper_threshold_pct_rise : 80.000;
  input_threshold_pct_fall : 50.000;
  input_threshold_pct_rise : 50.000;
  output_threshold_pct_fall : 50.000;
  output_threshold_pct_rise : 50.000;

	type (DATA_BUS_63) {
		base_type : array;
		data_type : bit;
		bit_width : 64;
		bit_from : 63;
		bit_to : 0;
		downto : true;
	 }
	type (ADDR_BUS_5) {
		base_type : array;
		data_type : bit;
		bit_width : 6;
		bit_from : 5;
		bit_to : 0;
		downto : true;
	 }
	cell(RM_IHPSG13_1P_64x64_c2_bm_bist) {
			bus_naming_style : "%s[%d]" ;
			area : 50489.13 ;
	 	pin(A_DLY) {
			direction : input ; }
		bus(A_ADDR) {
	 		bus_type : ADDR_BUS_5 ;
	 		direction : input ; }
		pin(A_WEN) {
	 		direction : input ; }
		pin(A_REN) {
	 		direction : input ; }
		pin(A_MEN) {
	 		direction : input ; }
		bus(A_BM) {
	 		bus_type : DATA_BUS_63 ;
	 		direction : input ; }
	 	pin(A_CLK) {
		 	direction : input ; }
	 	bus(A_DIN) {
		 	bus_type : DATA_BUS_63 ;
		 	direction : input ; }
	 	pin(A_BIST_EN) {
		 	direction : input ; }
		bus(A_BIST_ADDR) {
	 		bus_type : ADDR_BUS_5;
	 		direction : input ; }
		pin(A_BIST_WEN) {
	 		direction : input ; }
		pin(A_BIST_REN) {
	 		direction : input ; }
		pin(A_BIST_MEN) {
	 		direction : input ; }
		bus(A_BIST_BM) {
	 		bus_type : DATA_BUS_63;
	 		direction : input ; }
	 	pin(A_BIST_CLK) {
		 	direction : input ; }
	 	bus(A_BIST_DIN) {
		 	bus_type : DATA_BUS_63;
		 	direction : input ; }
		bus(A_DOUT) {
		 	bus_type : DATA_BUS_63;
		 	direction : output ; }
	}
}
